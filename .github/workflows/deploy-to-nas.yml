   name: Deploy to NAS

   on:
     push:
       branches: [ main ]  # Sesuaikan dengan branch Anda (main atau master)
     workflow_dispatch:

   jobs:
     build-and-deploy:
       runs-on: ubuntu-latest
       
       steps:
       - name: Checkout code
         uses: actions/checkout@v3
       
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v2
       
       - name: Login to GitHub Container Registry
         uses: docker/login-action@v2
         with:
           registry: ghcr.io
           username: ${{ github.actor }}
           password: ${{ secrets.GITHUB_TOKEN }}
       
       - name: Build and push Docker image
         uses: docker/build-push-action@v4
         with:
           context: .
           push: true
           tags: ghcr.io/${{ github.repository }}:latest
           cache-from: type=gha
           cache-to: type=gha,mode=max
       
       - name: Deploy to NAS
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.NAS_HOST }}
           username: ${{ secrets.NAS_USERNAME }}
           password: ${{ secrets.NAS_PASSWORD }}
           port: ${{ secrets.NAS_PORT }}
           script: |
             # Buat direktori jika belum ada
             mkdir -p /volume1/docker/cesium-react
             
             # Salin file konfigurasi ke NAS
             cd /volume1/docker/cesium-react
             
             # Login ke GitHub Container Registry
             echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
             
             # Pull image terbaru
             docker pull ghcr.io/${{ github.repository }}:latest
             
             # Buat atau perbarui docker-compose.yml
             cat > docker-compose.yml << 'EOL'
             services:
               app:
                 image: ghcr.io/${{ github.repository }}:latest
                 ports:
                   - "5004:5004"
                 environment:
                   - MONGODB_URI=mongodb://mongodb:27017/belajaroutcrop-db
                   - PORT=5004
                   - REACT_APP_API_URL=http://${{ secrets.NAS_HOST }}:5004
                 volumes:
                   - ./uploads:/app/uploads
                   - ./build:/app/build
                 depends_on:
                   - mongodb
                 restart: unless-stopped

               mongodb:
                 image: mongo:6
                 ports:
                   - "27018:27017"
                 volumes:
                   - mongodb_data:/data/db
                   - ./mongo-seed:/mongo-seed
                 restart: unless-stopped

             volumes:
               mongodb_data:
             EOL
             
             # Restart containers
             docker-compose down
             docker-compose up -d
             
             # Bersihkan image yang tidak digunakan
             docker image prune -f